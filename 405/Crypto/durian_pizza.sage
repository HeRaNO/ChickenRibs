from Crypto.Util.number import *
from hashlib import md5

A = [[ 306700786523733288127563783681848823006456525267952414387036425998652549307949988593007687582478535334067674517509565315171938613480399904359954585830581523585558073311363741302799256568336682815835441659143960426151588139793023914143424535581523298788512595840330631617969545759272026148371373075203662191077958559649315210878146898217842473230159453682401688457611705415004511599063203354166266788612140582658966506911588298630633388400309051986894205804,  898493349040480199153592243958992314191963408360073625966541729304603658316508680147937425593248154129810765596014229152451507193234039112178515042043817048874736850299548861565236437945160674604922706903446910844630061969334818474057806045775782477812955497138720990852520447665806649572216935868677853001029070348491622378944402007509695995454089129758863556001949090741758276896622211458295841117575080291218939015929794632885224152554006538258120717959],
[1070408185553777684924887289127693699505974797150581442162558590284160898118339817555561866619981534509146776251491383739673326080446964595439329417431387177894748293096547119284964894077902368995682849682375512785350309125681997994323091528708260879905779174677291269553997258377623641279335617616240586273900331484690672325173624431117165190387829122078173806088187434648570881460488239465167964704025689038686900031799039852963300562160981337466101170883,  872815754423889432486455323688140196971212677821212252181112928241360807311109944124429611697722635920751870188997259457056211155256589563537007971820749599255672345124735545739677744646778847682334333856184910667389813998106894263407412284367039331100765440519835572862142760963231956622584096257200398689818679540066508818477254336532048189416245915396869858328710431697432262622517819938726863804823949894769573590600861202853611514429570627349112703753]]

Y = [[569221265496504238942945693554068397706391716814376249621468746085606677609024122327190355190545280511569358362045716912472862687376495923421347892536804772552218628634797818626162513565604850720301010641441907405691323855840964759482349988343133005784561550110798320270191622800893164485030807635942811468650662916644006667146031299342168345469691689840612415732808271922646737822896761890506471963413710524787437003180230030354223459624218489193847386735, 448641541250014681977435132660276907264884735846866597143637198056296225528000870178106999259132780594897820892500042543923315835812373763935403404644591981125171357702176319937420473996469514651207535340474453302179415188291743562417160583014323365260282356550655596778807839064633433184000640034353853655119222603995428199466612589865772770418212404742664370332994700317628457209259983556801920132784428690030695846465650476044629926135305874206546904156],
[584450015343679651087115964921906069166537034724216404437604528445135151396700973640135244044247318822809561085816217445845629681424337320943693313410820749623059838584721750429611069071998569524805877232175491056228415066726705711711732279838230208824503409469256579978434212002771448313029184228477705283488739175691570686476452972096925120209059947637352338606007893063452214060581381918073210966410360355133789577415332048957763666702318657439606021657, 764559888664606401534225480736064437067658358660006307888391620032083930915626822612404836876166088195968973827538654016269493960123320763468320519776730733720771130077512305604485475783075420319817336316034439224022563627887439851685107891108412944463104743964448732654360534152974463787314042406770484509094543799363032423886771387089189268353456897006595208113642590397368327041111607296512108952392720547545025108011391788403169558407549663707058554910]]

P = 1683208011904326369614622637266279437689133954448379616371700884204960914555663940480279149713339270325925168420440219242200974530089995855592800607008073352225050959921163648597810918064999130339182045419187967563900627029777127035486454797289161072439261816273949811644402761487035852329832281344470933105020032726743824545249720464432569452215560618818514051408518771115575262610796105200817560692660322603801622552450039704827403440905951313734995767297

# is_prime(P)
# True
# factor(P - 1)
# 2^12 * 3^26 * 19^15 * 139^27 * 1753^5 * 16189 * 74831^9 * 931657^23 * 49453669^21

R = [[588931841506669041071351651594125052241506730485200539888595365281475008784943800657924187895087830106564758457246914089954810979734351321726152740403383216511528840618255722824371120940841757097064575022440235109654640176088472160297837756641632568362415637902294412854200617542001194116073949029574432007988187447446368297425764814588057662920923229662092488233304883003942585662588322164117366333701070536291874101933521112705725740160406104260459108466, 1152522128683004255042783147661939518231143314375533162847151263334049133079196546291266018866203496466733403695086200304606906034647725549125760486015877506907189243180255577403889258765913250168165102247734494348908468991364326554104870373055847733147142350810886382807118534064257674163535961340547246116756760968359133550577416894334998778121151817199749323716777388149276503097126810392617893919389876893510034078640239194870039261783498898119397100451], [474597015544540866961048138043394224594518368427193620646421404324686837717429168828283664268728632580996633915308522856050322663316430425465103931783401183898037920909074526227594100740153276417281664579503539062342005291106427882421304629735728226263785592795513902157369385348782221809735680949008516400698265866466512729857780075708866745766060713427319745219472074375936094393749260713447331567570244915750228295802637790597142020558119114010851031070, 1623729513533552263833501206278175038713088239833007218875389573064398575196184984292577648469098399410000277807178231639166885144897699194474901121890241337455530523005247943093379205376908812949122716087074774599714481782556808565858178751265188065333372159140433674614595679358699708788253348952020272275984775516065512590746681917520714142192521785126264058623914231234776069199118657839820174138059795513180221033083679534449903966635644334781634680812]]

# R = [[1, 0], [0, 1]]

A = Matrix(GF(P), A)
Y = Matrix(GF(P), Y)
R = Matrix(GF(P), R)

def H(m, R):
    con = m + b''.join([long_to_bytes(int(R[i,j])) for i in range(R.nrows()) for j in range(R.ncols())])
    return bytes_to_long(md5(con).digest())

t = H(b"Durian Pizza", R)
t = Y ^ t
R = R * ~t

# A^s = R
# pJ^sp^(-1) = R
# J^s = p^(-1)Rp

j, p = A.jordan_form(transformation=True)

# print(j)

j_s = ~p*R*p

s = discrete_log(GF(P)(j_s[1][1]), GF(P)(j[1][1]))
assert A ^ s == R

print(s)
