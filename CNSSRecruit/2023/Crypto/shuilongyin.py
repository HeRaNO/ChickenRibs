from Crypto.Util.number import long_to_bytes

p = 4873905926740615531018463661385452170898784133203367799135441645830937750628221985822405430005703937197770247575076559744236744538228018031486049820173674
g = 2593552830271406523114019117101950399687742243315195843514987700785182656087120211241524521448500935829478648514527037446437576680778419567396094750508622
c = 3431276814099066030808269572939347769420622699894452016972504433264414095698239241816562301198442206498226641308404105790355301176892588988847042699636406

def exgcd(a, b):
	if b == 0:
		return a, 1, 0
	res, x, y = exgcd(b, a % b)
	return res, y, x - (a // b) * y

def liEu(a, b, n):
	d, x, y = exgcd(a, n)
	if b % d != 0:
		return False
	n = n // d
	return ((x * b // d) % n + n) % n

m = liEu(g, c, p)
print(long_to_bytes(m).decode())
